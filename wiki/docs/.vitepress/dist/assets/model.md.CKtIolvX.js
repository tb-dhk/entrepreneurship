import{_ as a,c as s,o as i,a1 as e}from"./chunks/framework.C46D9NsM.js";const m=JSON.parse('{"title":"the food:pod image recognition model","description":"","frontmatter":{},"headers":[],"relativePath":"model.md","filePath":"model.md"}'),t={name:"model.md"},n=e(`<h1 id="the-food-pod-image-recognition-model" tabindex="-1">the food:pod image recognition model <a class="header-anchor" href="#the-food-pod-image-recognition-model" aria-label="Permalink to &quot;the food:pod image recognition model&quot;">​</a></h1><p>the food:pod image recognition model is designed to detect food items within the food:pod, facilitating efficient waste sorting and management.</p><p>the code for this model can be found in the <a href="https://github.com/tb-dhk/food-pod/tree/main/model" target="_blank" rel="noreferrer">model/</a> directory on the github page.</p><h2 id="prerequisites" tabindex="-1">prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;prerequisites&quot;">​</a></h2><p>ensure you have the following installed:</p><ul><li>python (version 3.6 or higher)</li><li>required python packages (you can install them using <code>pip install -r requirements.txt</code>)</li><li>make</li></ul><h2 id="directory-structure" tabindex="-1">directory structure <a class="header-anchor" href="#directory-structure" aria-label="Permalink to &quot;directory structure&quot;">​</a></h2><p>the directory structure should resemble the following:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>datasets/</span></span>
<span class="line"><span>└── data/</span></span>
<span class="line"><span>    └── &lt;food_category&gt;/</span></span>
<span class="line"><span>        └── &lt;food_name&gt;/</span></span>
<span class="line"><span>            ├── images/</span></span>
<span class="line"><span>            │   ├── train/</span></span>
<span class="line"><span>            │   ├── val/</span></span>
<span class="line"><span>            │   └── test/</span></span>
<span class="line"><span>            ├── labels/</span></span>
<span class="line"><span>            │   ├── train/</span></span>
<span class="line"><span>            │   └── val/</span></span>
<span class="line"><span>            └── boxes/</span></span>
<span class="line"><span>data/</span></span>
<span class="line"><span>└── data.yaml</span></span></code></pre></div><h2 id="steps" tabindex="-1">steps <a class="header-anchor" href="#steps" aria-label="Permalink to &quot;steps&quot;">​</a></h2><h3 id="step-1-source-images" tabindex="-1">step 1: source images <a class="header-anchor" href="#step-1-source-images" aria-label="Permalink to &quot;step 1: source images&quot;">​</a></h3><p>collect images for your food category and food name. ensure you have separate sets of images for training and testing. place them in directories of your choice.</p><h3 id="step-2-annotate-training-images-using-vgg-image-annotator" tabindex="-1">step 2: annotate training images using vgg image annotator <a class="header-anchor" href="#step-2-annotate-training-images-using-vgg-image-annotator" aria-label="Permalink to &quot;step 2: annotate training images using vgg image annotator&quot;">​</a></h3><p>annotate objects in your training images using the <a href="https://www.robots.ox.ac.uk/~vgg/software/via/" target="_blank" rel="noreferrer">vgg image annotator (via)</a>. export the annotations as csv files. ensure that the annotations contain accurate information about the annotated objects, including filename, object identifier, attributes, bounding box coordinates, and class id. the exported csv files should match the specified format.</p><h3 id="step-3-move-training-images" tabindex="-1">step 3: move training images <a class="header-anchor" href="#step-3-move-training-images" aria-label="Permalink to &quot;step 3: move training images&quot;">​</a></h3><p>place your training images in a directory of your choice. use the following command to move the training images:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> move_train_images</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> category=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_categor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src_train_images=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path/to/train/image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="step-4-move-testing-images" tabindex="-1">step 4: move testing images <a class="header-anchor" href="#step-4-move-testing-images" aria-label="Permalink to &quot;step 4: move testing images&quot;">​</a></h3><p>place your testing images in a directory of your choice. use the following command to move the testing images:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> move_test_images</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> category=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_categor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src_test_images=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path/to/test/image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="step-5-move-label-files" tabindex="-1">step 5: move label files <a class="header-anchor" href="#step-5-move-label-files" aria-label="Permalink to &quot;step 5: move label files&quot;">​</a></h3><p>place your label files in a directory of your choice. use the following command to move the label files:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> move_labels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> category=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_categor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src_label_files=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">path/to/label/file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="step-6-convert-and-augment-training-images" tabindex="-1">step 6: convert and augment training images <a class="header-anchor" href="#step-6-convert-and-augment-training-images" aria-label="Permalink to &quot;step 6: convert and augment training images&quot;">​</a></h3><p>convert and augment the training images using <code>convert.py</code>. use the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> convert_and_augment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> category=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_categor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="step-7-split-images-between-train-and-validation-sets" tabindex="-1">step 7: split images between train and validation sets <a class="header-anchor" href="#step-7-split-images-between-train-and-validation-sets" aria-label="Permalink to &quot;step 7: split images between train and validation sets&quot;">​</a></h3><p>split the images into training and validation sets using <code>tv.py</code>. use the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> split_images</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> category=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_categor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ratio=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">train_rati</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="step-8-update-data-data-yaml" tabindex="-1">step 8: update <code>data/data.yaml</code> <a class="header-anchor" href="#step-8-update-data-data-yaml" aria-label="Permalink to &quot;step 8: update \`data/data.yaml\`&quot;">​</a></h3><p>update the <code>data.yaml</code> file to reflect the appropriate directories. use the following command:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update_yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> category=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_categor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">food_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="step-9-train-the-model" tabindex="-1">step 9: train the model. <a class="header-anchor" href="#step-9-train-the-model" aria-label="Permalink to &quot;step 9: train the model.&quot;">​</a></h3><p>run <code>main.py</code>.</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span></span></code></pre></div><h2 id="updating-data-yaml" tabindex="-1">updating data.yaml <a class="header-anchor" href="#updating-data-yaml" aria-label="Permalink to &quot;updating data.yaml&quot;">​</a></h2><p>the <code>train_model</code> target in the makefile updates the <code>data.yaml</code> file with the correct paths.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">train</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;food_category&gt;/&lt;food_name&gt;/images/train&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;food_category&gt;/&lt;food_name&gt;/images/val&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;food_category&gt;/&lt;food_name&gt;/images/test&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><h2 id="notes" tabindex="-1">notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;notes&quot;">​</a></h2><ul><li>ensure the images and labels are correctly formatted and placed in the respective directories before running the makefile.</li><li>modify the <code>convert.py</code>, <code>tv.py</code>, and <code>train.py</code> scripts according to your specific requirements.</li></ul><h2 id="more-information" tabindex="-1">more information <a class="header-anchor" href="#more-information" aria-label="Permalink to &quot;more information&quot;">​</a></h2><h3 id="architecture" tabindex="-1">architecture <a class="header-anchor" href="#architecture" aria-label="Permalink to &quot;architecture&quot;">​</a></h3><p>based on yolov8 architecture, optimized for real-time food item detection.</p><h3 id="training" tabindex="-1">training <a class="header-anchor" href="#training" aria-label="Permalink to &quot;training&quot;">​</a></h3><ul><li>data augmentation: utilized 24 different augmentation techniques for enhanced model robustness.</li><li>specialized training: focused on food-related images to adapt the model for food waste detection.</li></ul><h3 id="inference" tabindex="-1">inference <a class="header-anchor" href="#inference" aria-label="Permalink to &quot;inference&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># load the yolo model</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yolo(model_weights_file)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># perform inference on images</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">results </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> model(image_paths)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> results:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result.show()</span></span></code></pre></div><h3 id="note" tabindex="-1">note <a class="header-anchor" href="#note" aria-label="Permalink to &quot;note&quot;">​</a></h3><p>for optimal performance, deploy the model in environments with sufficient lighting and minimal occlusion.</p>`,49),l=[n];function h(p,o,r,d,k,g){return i(),s("div",null,l)}const y=a(t,[["render",h]]);export{m as __pageData,y as default};
